{"version":3,"sources":["components/ContactsComponent.js","components/ContactList.js","contact-logo.png","App.js","reportWebVitals.js","index.js"],"names":["ContactsComponent","props","likeButton","setState","isLiked","state","showDescription","description","details","this","user","dob","age","location","city","phone","cell","email","className","style","width","src","picture","large","alt","name","first","last","type","class","onClick","id","React","Component","ListContacts","contactsList","map","App","componentDidMount","fetch","then","response","json","data","results","console","log","catch","error","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAwDeA,E,kDArDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,WAAa,WACT,EAAKC,SAAS,CACVC,SAAU,EAAKC,MAAMD,WAVV,EAcnBE,gBAAkB,WACd,EAAKH,SAAS,CACVI,aAAc,EAAKF,MAAME,eAd7B,EAAKF,MAAQ,CACTD,SAAS,EACTG,aAAa,GAJF,E,qDAoBT,IAAD,OACCC,EACF,gCACI,8BAAG,sCAAcC,KAAKR,MAAMS,KAAKC,IAAIC,OAErC,8BAAG,2CAAmBH,KAAKR,MAAMS,KAAKG,SAASC,KAA/C,KAAuDL,KAAKR,MAAMS,KAAKG,SAASR,SAEhF,8BAAG,wCAAgBI,KAAKR,MAAMS,KAAKK,SAEnC,8BAAG,uCAAeN,KAAKR,MAAMS,KAAKM,QAElC,8BAAG,wCAAgBP,KAAKR,MAAMS,KAAKO,YAE3C,OACI,sBAAKC,UAAU,qBAAqBC,MAAO,CAAEC,MAAO,SAApD,UACI,qBAAKC,IAAKZ,KAAKR,MAAMS,KAAKY,QAAQC,MAAOL,UAAU,yBAAyBM,IAAKf,KAAKR,MAAMS,KAAKe,KAAKC,QACtG,sBAAKR,UAAU,YAAf,UACI,qBAAIA,UAAU,aAAd,UAA4BT,KAAKR,MAAMS,KAAKe,KAAKC,MAAjD,IAAyDjB,KAAKR,MAAMS,KAAKe,KAAKE,QAC9E,wBAAQC,KAAK,SAASC,MAAM,kBAAkBC,QAAS,kBAAM,EAAKxB,mBAAlE,SAAsFG,KAAKJ,MAAME,YAAc,eAAiB,iBAAwB,uBAExJ,qBAAKwB,GAAG,cAAcb,UAAU,cAAhC,SACI,oBAAGA,UAAU,YAAb,UACI,uBACCT,KAAKJ,MAAME,YAAcC,EAAU,oB,GA5ChCwB,IAAMC,WCSvBC,EARM,SAACjC,GAClB,OACIA,EAAMkC,aAAaC,KAAI,SAAC1B,GACpB,OAAO,cAAC,EAAD,CAAiCA,KAAMA,GAAfA,EAAKqB,QCNjC,MAA0B,yCCyC1BM,G,wDAnCb,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IAMRqC,kBAAoB,WAClBC,MAAM,wCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAIR,EAAeQ,EAAKC,QAAQR,KAAI,SAAA1B,GAAI,OAAIA,KAC5C,EAAKP,SAAS,CACZgC,iBACC,WAAQU,QAAQC,IAAI,EAAKzC,aAE7B0C,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAR,iBAAsBE,QAdxC,EAAK3C,MAAQ,CACX8B,aAAc,IAHC,E,qDAqBjB,OACE,gCACE,yBAAQjB,UAAU,aAAlB,UACE,qBAAKa,GAAG,OAAOV,IAAK4B,EAAMzB,IAAI,SAC9B,oBAAIN,UAAU,aAAd,4BAEF,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,CAAciB,aAAc1B,KAAKJ,MAAM8B,wB,GA7B/BH,IAAMC,YCOTiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1fac7a21.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ContactsComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLiked: false,\r\n            description: false\r\n        }\r\n    }\r\n\r\n    likeButton = () => {\r\n        this.setState({\r\n            isLiked: !this.state.isLiked\r\n        })\r\n    }\r\n\r\n    showDescription = () => {\r\n        this.setState({\r\n            description: !this.state.description\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const details =\r\n            <div>\r\n                <p><h5>Age:</h5>{this.props.user.dob.age}</p>\r\n\r\n                <p><h5>Location:</h5>{this.props.user.location.city}, {this.props.user.location.state}</p>\r\n\r\n                <p><h5>Phone:</h5>{this.props.user.phone}</p>\r\n\r\n                <p><h5>Cell:</h5>{this.props.user.cell}</p>\r\n\r\n                <p><h5>Email:</h5>{this.props.user.email}</p>\r\n            </div>\r\n        return (\r\n            <div className=\"card margin-bottom\" style={{ width: \"25rem\" }}>\r\n                <img src={this.props.user.picture.large} className=\"card-img-top beerImage\" alt={this.props.user.name.first}></img>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{this.props.user.name.first} {this.props.user.name.last}</h5>\r\n                    <button type=\"button\" class=\"btn btn-primary\" onClick={() => this.showDescription()}>{this.state.description ? \"Hide Details\" : \"Show Details\"}</button><br></br>\r\n\r\n                    <div id=\"hideDetails\" className=\"hideDetails\">\r\n                        <p className=\"card-text\">\r\n                            <br></br>\r\n                            {this.state.description ? details : null}\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactsComponent;\r\n\r\n\r\n","import React from 'react';\r\nimport ContactsComponent from './ContactsComponent';\r\n\r\nconst ListContacts = (props) => {\r\n    return (\r\n        props.contactsList.map((user) => {\r\n            return <ContactsComponent key={user.id} user={user} />\r\n        })\r\n    )\r\n}\r\n\r\nexport default ListContacts;","export default __webpack_public_path__ + \"static/media/contact-logo.20c69905.png\";","import React from 'react';\nimport ListContacts from './components/ContactList';\nimport logo from './contact-logo.png';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      contactsList: [],\n    }\n  }\n\n  componentDidMount = () => {\n    fetch('https://randomuser.me/api?results=40')\n      .then(response => response.json())\n      .then(data => {\n        let contactsList = data.results.map(user => user);\n        this.setState({\n          contactsList\n        }, () => { console.log(this.state) })\n      })\n      .catch(error => console.log(`Error, ${error}`))\n  }\n\n\n  render() {\n    return (\n      <div>\n        <header className=\"App-header\">\n          <img id=\"logo\" src={logo} alt=\"logo\" />\n          <h1 className=\"white-font\">My Contacts</h1>\n        </header>\n        <div className=\"layout\">\n          <ListContacts contactsList={this.state.contactsList} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}